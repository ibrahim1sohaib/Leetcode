238. Product of Array Except Self

Given an integer array nums, return an array answer such that answer[i] is equal to the product of all the elements of nums except nums[i].

The product of any prefix or suffix of nums is guaranteed to fit in a 32-bit integer.

You must write an algorithm that runs in O(n) time and without using the division operation.

 

Example 1:

Input: nums = [1,2,3,4]
Output: [24,12,8,6]

;;;;
java
;;;;
class Solution {
   public int[] productExceptSelf(int[] nums) {
        int n = nums.length;
        
        // Initialize arrays to store products to the left and right of each element
        int[] leftProducts = new int[n];
        int[] rightProducts = new int[n];
        
        // Initialize result array
        int[] result = new int[n];
        
        // Calculate products to the left of each element
        // for element at position1 , we only product it with position 0 stored at leftproduct
        int leftProduct = 1;
        for (int i = 0; i < n; i++) {
            leftProducts[i] = leftProduct;
            leftProduct *= nums[i];
        }
        
        // Calculate products to the right of each element
        int rightProduct = 1;
        for (int i = n - 1; i >= 0; i--) {
            rightProducts[i] = rightProduct;
            rightProduct *= nums[i];
        }
        
        // Calculate the final result by multiplying left and right products
        for (int i = 0; i < n; i++) {
            result[i] = leftProducts[i] * rightProducts[i];
        }
        
        return result;
    }
}