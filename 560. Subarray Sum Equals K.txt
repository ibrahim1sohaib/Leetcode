560. Subarray Sum Equals K

Given an array of integers nums and an integer k, return the total number of subarrays whose sum equals to k.

A subarray is a contiguous non-empty sequence of elements within an array.

 

Example 1:

Input: nums = [1,1,1], k = 2
Output: 2

;;;;
java
;;;;

 class Solution {
    public int subarraySum(int[] nums, int k) {
        int count = 0;  // Variable to store the count of subarrays with sum equal to k
        int sum = 0;    // Variable to store the running sum

        // Map to store the frequency of prefix sums
        Map<Integer, Integer> prefixSumFreq = new HashMap<>();
        prefixSumFreq.put(0, 1);  // Initialize with 0 to handle subarrays starting from index 0

        for (int num : nums) {
            sum += num;  // Update the running sum

            // Check if (sum - k) exists in the map
            if (prefixSumFreq.containsKey(sum - k)) {
                // If yes, add its frequency to the count
                count += prefixSumFreq.get(sum - k);
            }

            // Update the frequency of the current prefix sum in the map
            prefixSumFreq.put(sum, prefixSumFreq.getOrDefault(sum, 0) + 1);
        }

        return count;  // Return the final count of subarrays with sum equal to k
    }

    
}

................