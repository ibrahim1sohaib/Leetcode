706. Design HashMap

Design a HashMap without using any built-in hash table libraries.

Implement the MyHashMap class:

MyHashMap() initializes the object with an empty map.
void put(int key, int value) inserts a (key, value) pair into the HashMap. If the key already exists in the map, update the corresponding value.
int get(int key) returns the value to which the specified key is mapped, or -1 if this map contains no mapping for the key.
void remove(key) removes the key and its corresponding value if the map contains the mapping for the key.
 

Example 1:

Input
["MyHashMap", "put", "put", "get", "get", "put", "get", "remove", "get"]
[[], [1, 1], [2, 2], [1], [3], [2, 1], [2], [2], [2]]
Output
[null, null, null, 1, -1, null, 1, null, -1]


;;;;;
java
;;;;;
class MyHashMap {
    private int[] keys;
    private int[] values;

    public MyHashMap() {
        keys = new int[10000];
        values = new int[10000];
    }

    public void put(int key, int value) {
        int index = getIndex(key);
        keys[index] = key;
        values[index] = value;
    }

    public int get(int key) {
        int index = getIndex(key);
        if (keys[index] == key) {
            return values[index];
        }
        return -1;
    }

    public void remove(int key) {
        int index = getIndex(key);
        if (keys[index] == key) {
            keys[index] = 0;
            values[index] = 0;
        }
    }

    private int getIndex(int key) {
        return Integer.hashCode(key) % keys.length;
    }
} 