706. Design HashMap

Design a HashMap without using any built-in hash table libraries.

Implement the MyHashMap class:

MyHashMap() initializes the object with an empty map.
void put(int key, int value) inserts a (key, value) pair into the HashMap. If the key already exists in the map, update the corresponding value.
int get(int key) returns the value to which the specified key is mapped, or -1 if this map contains no mapping for the key.
void remove(key) removes the key and its corresponding value if the map contains the mapping for the key.
 

Example 1:

Input
["MyHashMap", "put", "put", "get", "get", "put", "get", "remove", "get"]
[[], [1, 1], [2, 2], [1], [3], [2, 1], [2], [2], [2]]
Output
[null, null, null, 1, -1, null, 1, null, -1]


;;;;;
java
;;;;;
class MyHashMap {
private static ArrayList<Integer> keys, values;
public MyHashMap() {
    keys = new ArrayList<Integer>();
    values = new ArrayList<Integer>();
}
public void put(int key, int value) {
    int i;
    if((i = keys.indexOf(key)) != -1)
        values.set(i, value);
    else{
        keys.add(key);
        values.add(value);
    }
}
public int get(int key) {
    int i;
    if((i = keys.indexOf(key)) != -1)
        return values.get(i);
    return -1;
}
public void remove(int key) {
    int i = keys.indexOf(key);
    if(i != -1){
        keys.remove(i);
        values.remove(i);
    }
}
}