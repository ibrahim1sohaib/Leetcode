189. Rotate Array

Given an integer array nums, rotate the array to the right by k steps, where k is non-negative.

 

Example 1:

Input: nums = [1,2,3,4,5,6,7], k = 3
Output: [5,6,7,1,2,3,4]
Explanation:
rotate 1 steps to the right: [7,1,2,3,4,5,6]
rotate 2 steps to the right: [6,7,1,2,3,4,5]
rotate 3 steps to the right: [5,6,7,1,2,3,4]

;;;;;
java
;;;;;;
class Solution {
    public void rotate(int[] nums, int k) {
    int n = nums.length;
        k = k % n; // To handle cases where k is greater than the length of the array

        // Reverse the entire array
        reverse(nums, 0, n - 1);
        
        // Reverse the first k elements
        reverse(nums, 0, k - 1);
        
        // Reverse the remaining elements
        reverse(nums, k, n - 1);
    }

    private static void reverse(int[] nums, int start, int end) {
        while (start < end) {
            int temp = nums[start];
            nums[start] = nums[end];
            nums[end] = temp;
            start++;
            end--;
        }
    }
}

.....................

In summary, the code rotates an array to the right by a specified number of steps using a three-step reversal algorithm. It reverses the entire array, then reverses the first k elements, and finally reverses the remaining elements. This approach minimizes the number of element swaps and achieves the desired rotation efficiently.
