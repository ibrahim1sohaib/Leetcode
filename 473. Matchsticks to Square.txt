473. Matchsticks to Square

You are given an integer array matchsticks where matchsticks[i] is the length of the ith matchstick. You want to use all the matchsticks to make one square. You should not break any stick, but you can link them up, and each matchstick must be used exactly one time.

Return true if you can make this square and false otherwise.


Input: matchsticks = [1,1,2,2,2]
Output: true
Explanation: You can form a square with length 2, one side of the square came two sticks with length 1.

;;;;
java
;;;;

class Solution {
    public boolean makesquare(int[] matchsticks) {
        if (matchsticks == null || matchsticks.length < 4) {
            return false;
        }

        int sum = 0;
        for (int matchstick : matchsticks) {
            sum += matchstick;
        }

        if (sum % 4 != 0) {
            return false;
        }

        int target = sum / 4;
        int[] sides = new int[4];

        // Backtracking function to check if it's possible to form a square
        return canFormSquare(matchsticks, 0, sides, target);
    }

    private boolean canFormSquare(int[] matchsticks, int index, int[] sides, int target) {
        if (index == matchsticks.length) {
            // Check if all sides have the target length
            return sides[0] == target && sides[1] == target && sides[2] == target && sides[3] == target;
        }

        // Try placing the current matchstick on each side
        for (int i = 0; i < 4; i++) {
            if (sides[i] + matchsticks[index] <= target) {
                sides[i] += matchsticks[index];

                // Recursively try placing the next matchstick
                if (canFormSquare(matchsticks, index + 1, sides, target)) {
                    return true;
                }

                // Backtrack
                sides[i] -= matchsticks[index];
            }
        }

        return false;
    }
}